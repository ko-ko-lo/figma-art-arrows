figma.showUI(__html__, {
  width: 500,
  height: 500,
  title: "Artsy Arrow Plugin from Min & Denise",
});

const arrows: Record<string, string> = {
  arrow1: `<svg width="117" height="34" viewBox="0 0 235 67" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="M0.202051 17.4327C65.0295 -9.02901 142.97 -0.485073 200.527 39.3842" stroke="black" stroke-miterlimit="10"/>
  </svg>
`,
  arrow2: `<svg width="253" height="203" viewBox="0 0 253 203" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="M249.71 100.355C249.592 100.443 248.991 100.028 248.86 100.331C248.737 100.594 249.034 101.208 248.693 101.534C248.593 101.631 246.55 101.866 245.918 102.199C243.419 103.501 241.737 104.921 238.72 105.727C235.867 106.487 236.171 107.37 233.393 109.171C231.919 110.125 229.306 111.01 227.766 111.845C226.645 112.446 224.876 114.168 224.212 114.453C223.416 114.786 222.621 114.148 222.43 114.202C222.364 114.226 222.525 115.108 222.04 115.599C219.894 117.751 216.378 119.007 214.074 120.622C211.036 122.743 191.676 137.201 189.884 136.924C188.919 136.769 188.028 135.137 187.094 134.82C186.606 134.658 185.81 135.179 184.997 134.721C184.789 134.601 183.499 131.014 182.763 130.558C182.9 128.689 189.393 125.582 189.652 125.008C189.715 124.872 189.414 122.146 189.374 121.995C189.086 121.009 186.984 120.874 189.11 118.955C190.335 117.851 192.491 117.492 193.668 116.089L195.231 116.855C195.619 114.873 198.985 114.408 200.642 113.583C204.689 111.571 210.067 109.995 213.905 107.698C214.381 107.413 215.324 106.816 214.865 106.193C210.979 106.237 207.044 106.148 203.158 106.027C200.382 105.94 198.641 105.72 195.95 105.783C186.856 106.003 177.08 105.417 167.936 105.249C164.248 105.176 155.322 105.839 152.391 104.929C151.765 104.734 151.179 103.841 151.099 103.87C150.975 103.922 150.909 104.841 150.155 105.128C149.149 105.507 145.631 105.072 144.299 105.11C115.89 105.915 88.3725 107.855 59.4365 110.655C51.6715 111.41 45.4418 112.023 37.8552 112.044C32.8096 112.063 22.5949 113.425 18.1297 112.867C16.7611 112.7 16.4516 111.782 15.4277 111.445C14.3451 111.092 11.9094 111.717 10.5093 111.546C10.3432 111.524 7.33383 110.687 7.17086 110.61C3.8922 109.029 3.83829 106.176 2.33621 103.373C8.97642 98.9874 17.0861 100.018 24.3188 97.6663L23.8337 96.3454C25.7475 95.067 26.3358 95.1551 28.4106 96.0065L28.2216 97.5636C30.0986 94.6443 29.636 96.1725 30.9172 96.2431C31.6385 96.2831 31.9125 95.4397 32.2874 95.5824C35.0922 96.6436 36.6826 95.4896 39.7108 95.2971C43.0429 95.0924 45.8481 95.2813 48.858 94.8924C59.0598 93.5575 69.5441 94.0228 79.6426 93.7329C84.0862 93.6076 88.4209 92.8901 93.0169 93.3113C94.7564 93.4643 96.055 95.2882 97.4339 92.4888C97.847 92.9034 100.991 93.5937 101.21 93.5748C118.199 92.0869 135.516 91.7137 153.317 91.7444C165.136 91.7645 180.867 91.1225 192.59 92.2903C194.712 92.5009 197.497 94.1934 198.012 92.2926C202.759 93.0275 207.93 92.6469 212.714 92.8799C216.436 93.068 221.056 94.428 224.507 93.2854C224.737 92.9844 224.204 92.7786 223.939 92.7539C215.337 91.8789 200.272 86.438 192.545 82.3065C190.912 81.4305 190.072 79.5012 188.665 78.5211C187.112 77.4284 184.448 77.6923 182.398 76.5986C179.31 74.9406 176.139 71.5982 178.382 68.0882C179.644 67.9401 181.688 69.1859 182.375 69.276C183.062 69.3661 183.767 68.7802 184.499 68.8692C192.482 69.8627 200.013 74.9295 207.698 77.7155C212.172 79.3387 216.704 80.249 220.966 81.618C229.44 84.3439 241.687 88.706 248.426 94.4728C249.372 95.2811 250.966 99.4193 249.736 100.323L249.71 100.355Z" fill="black"/>
  </svg>

`,
  arrow3: `<svg width="103" height="59" viewBox="0 0 323 177" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M5 172C33.5 142.667 112.6 92.5 201 126.5C289.4 160.5 303.83 61 300 7M300 7L280.5 27.5M300 7L318 27.5" stroke="#9C27B0" stroke-width="9" stroke-linecap="round"/>
</svg>
`,
  arrow4: `<svg width="72" height="98" viewBox="0 0 216 289" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M211.5 6.66907C167 0.00236738 85.6 9.76907 116 102.169C146.4 194.569 56 255.999 7 275.169M7 275.169L24 243.169M7 275.169L48.5 283.669" stroke="#9C27B0" stroke-width="9" stroke-linecap="round"/>
</svg>
`,
  arrow5: `<svg width="70" height="79" viewBox="0 0 210 236" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M5 231.436C28.029 170.967 90.615 62.496 163.94 98.306C214.002 122.755 175.737 176.626 122.002 147.755C68.267 118.884 84.046 15.645 202.986 25.635M202.986 25.635L187.019 43.733M202.986 25.635L178.314 5" stroke="#9C27B0" stroke-width="9" stroke-linecap="round"/>
</svg>
`,
  arrow6: `<svg width="102" height="68" viewBox="0 0 313 204" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M5 5C9.5 39.833 44.3 105.2 147.5 88C250.7 70.8 291.17 153.167 298.5 196.5M298.5 196.5L275 178.5M298.5 196.5L308 170.5" stroke="#9C27B0" stroke-width="9" stroke-linecap="round"/>
</svg>`,
};

/* ------------------------------------------------------------------
      Send arrows data to UI
------------------------------------------------------------------ */

figma.ui.onmessage = (msg) => {
  if (msg.type === "request-arrows") {
    figma.ui.postMessage({
      type: "load-arrows",
      arrows: arrows,
    });
  }

  /* ------------------------------------------------------------------
  Handle inserting arrows to Figma
  ------------------------------------------------------------------ */

  if (msg.type === "insert-arrow") {
    const svgString = arrows[msg.arrowType];

    /* ------------------------------------------------------------------
    Convert SVG to a Figma node
    -> SVGs <path> elements are translated into Figma VECTOR nodes
    ------------------------------------------------------------------ */

    // Convert to Figma vector
    const node = figma.createNodeFromSvg(svgString);
    // Extract the actual vector shape (first one) from the SVG wrapper
    const arrowVector = node.findOne((n) => n.type === "VECTOR") as VectorNode;
    // Insert into Figma
    figma.currentPage.appendChild(arrowVector);
    // Remove annoying frame wrapper
    node.remove();

    /* ------------------------------------------------------------------
   Zoom arrow and close Plugin
   ------------------------------------------------------------------ */

    figma.viewport.scrollAndZoomIntoView([node]);
    figma.closePlugin();
  }
};
